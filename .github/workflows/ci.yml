name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Detect changes in source files
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      androidTest: ${{ steps.filter.outputs.androidTest }}
      main: ${{ steps.filter.outputs.main }}
      test: ${{ steps.filter.outputs.test }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            androidTest:
              - 'app/src/androidTest/**'
            main:
              - 'app/src/main/**'
            test:
              - 'app/src/test/**'

  lint:
    needs: [changes]
    if: |
      ${{ needs.changes.outputs.androidTest == 'true' }} ||
      ${{ needs.changes.outputs.main == 'true' }} ||
      ${{ needs.changes.outputs.test == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "CHANGES => main: ${{ needs.changes.outputs.main == 'true' }}; test: ${{ needs.changes.outputs.test == 'true' }}; androidTest: ${{ needs.changes.outputs.androidTest == 'true' }}"

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run lint check
        run: ./gradlew lintDebug

      - name: Upload lint results report (html)
        uses: actions/upload-artifact@v3
        with:
          name: lint-results-debug.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [changes, lint]
    if: |
      ${{ needs.changes.outputs.androidTest == 'true' }} ||
      ${{ needs.changes.outputs.main == 'true' }} ||
      ${{ needs.changes.outputs.test == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload unit test summary report (debug)
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report-debug
          path: app/build/reports/tests/testDebugUnitTest/

      - name: Upload unit test summary report (release)
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report-release
          path: app/build/reports/tests/testReleaseUnitTest/

  instrumentation-test:
    needs: [changes, unit-test]
    if: |
      ${{ needs.changes.outputs.androidTest == 'true' }} ||
      ${{ needs.changes.outputs.main == 'true' }} ||
      ${{ needs.changes.outputs.test == 'true' }}
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29, 34]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload instrumentation test summary report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-test-report
          path: app/build/reports/androidTests/connected/